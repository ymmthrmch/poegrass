# Generated by Django 5.1.2 on 2024-12-07 01:49

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('account_id', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9_]+$', '半角英数字、アンダーラインのみ使用できます。')], verbose_name='アカウントid')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='メールアドレス')),
                ('first_name', models.CharField(max_length=50, null=True, verbose_name='名前')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='姓（空欄可）')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_member', models.BooleanField(default=False, verbose_name='member')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser')),
                ('bio', models.TextField(blank=True, max_length=140, null=True, verbose_name='自己紹介')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='アカウント作成日')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
